#创建数据库连接
spring:
  datasource:
    url : jdbc:mysql://47.100.170.2:3306/W2G
    username : root
    password : healife605
    driver-class-name : com.mysql.jdbc.Driver
    # 使用druid数据源获取连接
    type : com.alibaba.druid.pool.DruidDataSource
    max-active : 20
    initial-size : 1
    min-idle : 3
    max-wait : 60000
    time-between-eviction-runs-millis : 60000
    min-evictable-idle-time-millis : 300000
    test-while-idle : true
    test-on-borrow : false
    test-on-return : false
  #注册到Eureka Server上的名称
  application :
    name  : new-user
  #cloud:
  #  discovery:
  #    client:
  #      health-indicator:
  #        enabled: false
  #      composite-indicator:
  #        enabled: false
mybatis:
    mapperLocations: classpath:mapperXml/*.xml


mapper:
  mappers:
      - com.wwg.markerMapper.CommonMapper
  not-empty: false
  identity: MYSQL

eureka:
  client:
    healthcheck:
      enabled: false
    service-url:
      defaultZone: http://localhost:8761/eureka/ #指定服务注册中心地址
  instance:
    #客户端向注册服务器发送心跳的间隔
    lease-renewal-interval-in-seconds: 5
    #告诉服务器如果10秒内未发送任何续约请求，则关闭该客户端
    lease-expiration-duration-in-seconds: 10

---
spring:
  #指定profiles为peer1
  profiles: peer1
server:
  port: 8100

---
spring:
  #指定profiles为peer1
  profiles: peer2
server:
  port: 8110

#eureka:
#  instance:
#    #设置主机名+端口访问实力
#    hostname: peer1
#  client:
#    #Eureka服务注册中心也会将自己作为客户端来尝试注册它自己，所以我们需要禁用它的客户端注册行为。
#    #此处若是不禁用，把两个eureka都启动就不会报错了
#    register-with-eureka: false
#    fetch-registry: false
#    service-url:
#      #将自己注册到peer2这个eureka上面
#      defaultZone: http://localhost:8761/eureka/  #指定eureka服务器的地址





